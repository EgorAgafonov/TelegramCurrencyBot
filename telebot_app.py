import telebot
from telebot import types
from settings import *
from utilities import ConvertionException, CryptoConverter, TextImageReader, QRcodeMaker
from datetime import *
import urllib3

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start', 'help'])
def start(message: telebot.types.Message):
    text_info = (f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {message.chat.username}!\n"
                 "–Ø - —Ç–≤–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫!\n"
                 "–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å - –ê–≥–∞—Ñ–æ–Ω–æ–≤ –ï.–ê.üôÇ\n\n"
                 "–ü–æ–∫–∞ —è —É–º–µ—é —Å–ª–µ–¥—É—é—â–µ–µ:\n"
                 "1Ô∏è‚É£ <b>–°–æ–æ–±—â–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –µ–µ –ø–æ–∫—É–ø–∫–∏:</b>\n"
                 "–î–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫—É—Ä—Å–∞/—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–∞–ª—é—Ç—ã –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–±–µ—Ä–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å (–ø—Ä–∏–º–µ—Ä):\n"
                 "'<u>100 USD RUB</u>'\n"
                 "(–≥–¥–µ 100 - —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ USD (–î–æ–ª–ª–∞—Ä–æ–≤ –°–®–ê) –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ RUB (–†–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏). –î–ª—è –≤—ã–∑–æ–≤–∞ —Å–ø–∏—Å–∫–∞"
                 " –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç (ISO 4217) –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–±–µ—Ä–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É '/values';\n"
                 "2Ô∏è‚É£ <b>–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏(—Ñ–æ—Ç–æ) –∏ –≤—ã–≤–æ–¥–∏—Ç—å –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –≤ —á–∞—Ç:</b>\n"
                 "<u>–î–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ(—Ñ–æ—Ç–æ) —Ç–µ–∫—Å—Ç–∞.</u>\n"
                 "–î–æ—Å—Ç—É–ø–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏, –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –ª–∏–±–æ –∏–µ—Ä–æ–≥–ª–∏—Ñ–∞–º–∏ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ "
                 "–º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ).\n"
                 "<u>–í–ê–ñ–ù–û:</u>\n"
                 "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Ç–∞–µ–º—ã–º –∏ –±–µ–∑ –∏—Å–∫–∞–∂–µ–Ω–∏–π, —Ç–µ–∫—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–¥ –ø—Ä—è–º—ã–º —É–≥–ª–æ–º –∫ "
                 "—á–∏—Ç–∞—Ç–µ–ª—éüëçüèª.")
    markup = types.ReplyKeyboardMarkup()
    btn_1 = types.KeyboardButton("–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç (OCR)")
    btn_2 = types.KeyboardButton("–ö—É—Ä—Å/–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞–ª—é—Ç—ã")
    markup.row(btn_1, btn_2)
    btn_3 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å QR-–∫–æ–¥")
    btn_4 = types.KeyboardButton("–§—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")
    markup.row(btn_3, btn_4)
    bot.send_message(message.chat.id, text_info, parse_mode='html', reply_markup=markup)


@bot.message_handler(commands=["values"])
def handle_values(message: telebot.types.Message):
    text = "–°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç:\n" + curr_str
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=["langs"])
def handle_langs(message: telebot.types.Message):
    text = "–°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:\n" + langs_str
    bot.send_message(message.chat.id, text)


@bot.message_handler(content_types=["text"])
def make_QR_code(message: telebot.types.Message):
    if message.text == "–°–æ–∑–¥–∞—Ç—å QR-–∫–æ–¥":
        text = (f"{message.chat.username}, –≤—Å—Ç–∞–≤—å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ url-–∞–¥—Ä–µ—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –≤–µ–±-—Å–∞–π—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ qr-–∫–æ–¥–∞.\n"
                f"<b>–í–ê–ñ–ù–û:\n1) —Å—Ç—Ä–æ–∫–∞ —Å –∞–¥—Ä–µ—Å–æ–º –¥–æ–ª–∂–Ω–∞ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Å–∞–π—Ç—É —á–µ—Ä–µ–∑ 'https://' "
                f"(–Ω–∞–ø—Ä–∏–º–µ—Ä):<u>https://www.google.ru/</u>;\n2) –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ –∞–¥—Ä–µ—Å–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.</b>")
        bot.send_message(message.chat.id, text, parse_mode='html')
        bot.register_next_step_handler(message, crate_qr_code)

    else:
        try:
            values = message.text.split(' ')
            if len(values) != 3:
                raise ConvertionException(
                    f"–û—à–∏–±–∫–∞!\n"
                    f"–£–∫–∞–∑–∞–Ω–æ {len(values)} –∑–Ω–∞—á–µ–Ω–∏—è(–∏–π) –≤–º–µ—Å—Ç–æ –ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç—Ä–µ—Ö.\n"
                    f"–í–ê–ñ–ù–û:\n"
                    f"–ú–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª!\n"
                    f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏/–∏–ª–∏ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏\n"
                    f"–í–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: '100 USD RUB'")

            quantity, base_code, target_code = values

            status, result = CryptoConverter.convert(token=API_KEY, quantity=quantity.upper(), base_code=base_code.upper(),
                                                     target_code=target_code.upper())

        except ConvertionException as e:
            bot.reply_to(message, f"{e}")
        except Exception as e:
            bot.reply_to(message, f"{e}")
        else:
            text = f"–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ {quantity} {base_code} —Å–æ—Å—Ç–∞–≤–∏—Ç {round(result['conversion_result'], 2)} {target_code}."
            bot.send_message(message.chat.id, text)


@bot.message_handler(content_types=["photo"])
def recognizing_text(message: telebot.types.Message):
    text_pictures = message.photo[-1]
    file_info = bot.get_file(text_pictures.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    save_path = RECOGN_IMAGE_PATH
    with open(save_path, 'wb') as new_file:
        new_file.write(downloaded_file)

    bot.reply_to(message, f"{message.chat.username}, —É–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–æ–±–æ–π  –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏.\n"
                          f"–í –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–±–µ—Ä–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å (–Ω–∞–ø—Ä–∏–º–µ—Ä):\n"
                          f"'ru' - –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª—ã —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–æ–≥–æ);\n"
                          f"'ru en' - –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª—ã –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —è–∑—ã–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä –∏ —Ä—É—Å—Å–∫–æ–≥–æ, –∏ "
                          f"–∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ).\n"
                          f"–î–ª—è –≤—ã–∑–æ–≤–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–±–µ—Ä–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É '/langs';\n"
                          f"–í–ê–ñ–ù–û:\n"
                          f"–ú–µ–∂–¥—É –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —è–∑—ã–∫–æ–≤ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª!\n"
                          f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏/–∏–ª–∏ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏!\n"
                          f"–í–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä): 'ru en', –ª–∏–±–æ —Ç–æ–ª—å–∫–æ 'ru'")
    bot.register_next_step_handler(message, enter_langs)


def enter_langs(message):
    msg_list = message.text.split(' ')
    langs = []
    for i in msg_list:
        langs.append(i.lower())
    bot.reply_to(message, f"{message.chat.username}, –ø—Ä–∏—Å—Ç—É–ø–∞—é –∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—é —Ç–µ–∫—Å—Ç–∞??!\n"
                          f" –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—Ä–µ–º—è, –ø—Ä–æ—Å—å–±–∞ —á—É—Ç—å-—á—É—Ç—å –ø–æ–¥–æ–∂–¥–∞—Ç—å...")
    result = TextImageReader.text_recognition(RECOGN_IMAGE_PATH, langs)
    text = "–ì–æ—Ç–æ–≤–æüëåüèª:   "
    bot.send_message(message.chat.id, text)
    bot.send_message(message.chat.id, result)


def crate_qr_code(message):
    html_link = message.text
    qr_code = QRcodeMaker.make_QR_code(html_link)
    text = "–ì–æ—Ç–æ–≤–æüëåüèª:"
    bot.send_message(message.chat.id, text)
    bot.send_photo(message.chat.id, qr_code)


bot.polling(none_stop=True)

